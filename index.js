var e,r=require("react");exports.RecorderErrors=void 0,(e=exports.RecorderErrors||(exports.RecorderErrors={})).AbortError="media_aborted",e.NotAllowedError="permission_denied",e.NotFoundError="no_specified_media_found",e.NotReadableError="media_in_use",e.OverconstrainedError="invalid_media_constraints",e.TypeError="no_constraints",e.NONE="",e.NO_RECORDER="recorder_error";var t=function(){function e(){this.url=null,this.blob=new Blob,this.mediaChunks=[]}var r=e.prototype;return r.setBlobProperties=function(e){this.blobProperties=e},r.storeChunk=function(e){this.mediaChunks.push(e)},r.stop=function(){var e=new Blob(this.mediaChunks,this.blobProperties),r=URL.createObjectURL(e);this.blob=e,this.url=r},r.reset=function(){this.mediaChunks=[]},r.getUrl=function(){return this.url},r.getBlob=function(){return this.blob},e}();function n(e){var n=e.audio,o=void 0===n||n,i=e.video,u=void 0!==i&&i,c=e.onStop,s=void 0===c?function(){return null}:c,a=e.screen,d=void 0!==a&&a,f=e.mediaRecorderOptions,l=void 0===f?null:f,p=e.videoStorage,h=void 0===p?new t:p,v=r.useRef(null);r.useRef([]);var m=r.useRef(null),b=r.useState("idle"),g=b[0],R=b[1],w=r.useState(!1),E=w[0],y=w[1],M=r.useState(null),k=M[0],_=M[1],P=r.useState("NONE"),T=P[0],O=P[1],S=r.useCallback(function(){try{R("acquiring_media");var e={audio:"boolean"==typeof o?!!o:o,video:"boolean"==typeof u?!!u:u},r=function(r,t){try{var n=function(){function r(){R("idle")}var t=d?Promise.resolve(window.navigator.mediaDevices.getDisplayMedia({video:u||!0})).then(function(e){function r(){m.current=e}var t=function(){if(o)return Promise.resolve(window.navigator.mediaDevices.getUserMedia({audio:o})).then(function(r){r.getAudioTracks().forEach(function(r){return e.addTrack(r)})})}();return t&&t.then?t.then(r):r()}):Promise.resolve(window.navigator.mediaDevices.getUserMedia(e)).then(function(e){m.current=e});return t&&t.then?t.then(r):r()}()}catch(e){return t(e)}return n&&n.then?n.then(void 0,t):n}(0,function(e){O(e.name),R("idle")});return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},[o,u,d]);r.useEffect(function(){if(!window.MediaRecorder)throw new Error("Unsupported Browser");if(d&&!window.navigator.mediaDevices.getDisplayMedia)throw new Error("This browser doesn't support screen capturing");var e=function(e){var r=navigator.mediaDevices.getSupportedConstraints(),t=Object.keys(e).filter(function(e){return!r[e]});t.length>0&&console.error("The constraints "+t.join(",")+" doesn't support on this browser. Please check your ReactMediaRecorder component.")};"object"==typeof o&&e(o),"object"==typeof u&&e(u),l&&l.mimeType&&(MediaRecorder.isTypeSupported(l.mimeType)||console.error("The specified MIME type you supplied for MediaRecorder doesn't support this browser")),m.current||S()},[o,d,u,S,l]);var N=function(e){h.storeChunk(e.data)},C=function(){h.stop();var e=h.getUrl();R("stopped"),_(e),s(e,h.getBlob())},U=function(e){y(e),m.current&&m.current.getAudioTracks().forEach(function(r){return r.enabled=!e})};return{error:exports.RecorderErrors[T],muteAudio:function(){return U(!0)},unMuteAudio:function(){return U(!1)},startRecording:function(){try{var e=function(){var e=function(){if(m.current){var e=function(){v.current=new MediaRecorder(m.current),v.current.ondataavailable=N,v.current.onstop=C,v.current.onerror=function(){O("NO_RECORDER"),R("idle")},v.current.start(),R("recording")},r=m.current.getTracks().some(function(e){return"ended"===e.readyState}),t=function(){if(r)return Promise.resolve(S()).then(function(){})}();return t&&t.then?t.then(e):e()}}();if(e&&e.then)return e.then(function(){})};O("NONE");var r=function(){if(!m.current)return Promise.resolve(S()).then(function(){})}();return Promise.resolve(r&&r.then?r.then(e):e())}catch(e){return Promise.reject(e)}},pauseRecording:function(){v.current&&"recording"===v.current.state&&v.current.pause()},resumeRecording:function(){v.current&&"paused"===v.current.state&&v.current.resume()},stopRecording:function(){v.current&&"inactive"!==v.current.state&&(R("stopping"),v.current.stop(),m.current&&m.current.getTracks().forEach(function(e){return e.stop()}),h.reset())},mediaBlobUrl:k,status:g,isAudioMuted:E,previewStream:m.current?new MediaStream(m.current.getVideoTracks()):null,clearBlobUrl:function(){return _(null)}}}exports.ObjectUrlStorage=t,exports.ReactMediaRecorder=function(e){return e.render(n(e))},exports.useReactMediaRecorder=n;
//# sourceMappingURL=index.js.map
