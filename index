import{useRef as e,useState as r,useCallback as n,useEffect as t}from"react";var o;!function(e){e.AbortError="media_aborted",e.NotAllowedError="permission_denied",e.NotFoundError="no_specified_media_found",e.NotReadableError="media_in_use",e.OverconstrainedError="invalid_media_constraints",e.TypeError="no_constraints",e.NONE="",e.NO_RECORDER="recorder_error"}(o||(o={}));var i=function(){function e(){this.url=null,this.blob=new Blob,this.mediaChunks=[]}var r=e.prototype;return r.setBlobProperties=function(e){this.blobProperties=e},r.storeChunk=function(e){this.mediaChunks.push(e)},r.stop=function(){var e=new Blob(this.mediaChunks,this.blobProperties),r=URL.createObjectURL(e);this.blob=e,this.url=r},r.reset=function(){this.mediaChunks=[]},r.getUrl=function(){return this.url},r.getBlob=function(){return this.blob},e}();function u(u){var c=u.audio,a=void 0===c||c,s=u.video,d=void 0!==s&&s,f=u.onStop,l=void 0===f?function(){return null}:f,p=u.screen,h=void 0!==p&&p,v=u.mediaRecorderOptions,m=void 0===v?null:v,b=u.videoStorage,g=void 0===b?new i:b,w=e(null);e([]);var R=e(null),y=r("idle"),E=y[0],k=y[1],M=r(!1),_=M[0],P=M[1],T=r(null),N=T[0],O=T[1],C=r("NONE"),D=C[0],U=C[1],B=n(function(){try{k("acquiring_media");var e={audio:"boolean"==typeof a?!!a:a,video:"boolean"==typeof d?!!d:d},r=function(r,n){try{var t=function(){function r(){k("idle")}var n=h?Promise.resolve(window.navigator.mediaDevices.getDisplayMedia({video:d||!0})).then(function(e){function r(){R.current=e}var n=function(){if(a)return Promise.resolve(window.navigator.mediaDevices.getUserMedia({audio:a})).then(function(r){r.getAudioTracks().forEach(function(r){return e.addTrack(r)})})}();return n&&n.then?n.then(r):r()}):Promise.resolve(window.navigator.mediaDevices.getUserMedia(e)).then(function(e){R.current=e});return n&&n.then?n.then(r):r()}()}catch(e){return n(e)}return t&&t.then?t.then(void 0,n):t}(0,function(e){U(e.name),k("idle")});return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},[a,d,h]);t(function(){if(!window.MediaRecorder)throw new Error("Unsupported Browser");if(h&&!window.navigator.mediaDevices.getDisplayMedia)throw new Error("This browser doesn't support screen capturing");var e=function(e){var r=navigator.mediaDevices.getSupportedConstraints(),n=Object.keys(e).filter(function(e){return!r[e]});n.length>0&&console.error("The constraints "+n.join(",")+" doesn't support on this browser. Please check your ReactMediaRecorder component.")};"object"==typeof a&&e(a),"object"==typeof d&&e(d),m&&m.mimeType&&(MediaRecorder.isTypeSupported(m.mimeType)||console.error("The specified MIME type you supplied for MediaRecorder doesn't support this browser")),R.current||B()},[a,h,d,B,m]);var j=function(e){g.storeChunk(e.data)},A=function(){g.stop();var e=g.getUrl();k("stopped"),O(e),l(e,g.getBlob())},S=function(e){P(e),R.current&&R.current.getAudioTracks().forEach(function(r){return r.enabled=!e})};return{error:o[D],muteAudio:function(){return S(!0)},unMuteAudio:function(){return S(!1)},startRecording:function(){try{var e=function(){var e=function(){if(R.current){var e=function(){w.current=new MediaRecorder(R.current),w.current.ondataavailable=j,w.current.onstop=A,w.current.onerror=function(){U("NO_RECORDER"),k("idle")},w.current.start(),k("recording")},r=R.current.getTracks().some(function(e){return"ended"===e.readyState}),n=function(){if(r)return Promise.resolve(B()).then(function(){})}();return n&&n.then?n.then(e):e()}}();if(e&&e.then)return e.then(function(){})};U("NONE");var r=function(){if(!R.current)return Promise.resolve(B()).then(function(){})}();return Promise.resolve(r&&r.then?r.then(e):e())}catch(e){return Promise.reject(e)}},pauseRecording:function(){w.current&&"recording"===w.current.state&&w.current.pause()},resumeRecording:function(){w.current&&"paused"===w.current.state&&w.current.resume()},stopRecording:function(){w.current&&"inactive"!==w.current.state&&(k("stopping"),w.current.stop(),R.current&&R.current.getTracks().forEach(function(e){return e.stop()}),g.reset())},mediaBlobUrl:N,status:E,isAudioMuted:_,previewStream:R.current?new MediaStream(R.current.getVideoTracks()):null,clearBlobUrl:function(){return O(null)}}}var c=function(e){return e.render(u(e))};export{i as ObjectUrlStorage,c as ReactMediaRecorder,o as RecorderErrors,u as useReactMediaRecorder};
//# sourceMappingURL=index.map
